The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

Import function from module:

    >>> add_integer = __import__('0-add_integer').add_integer

one int argument:

    >>> add_integer(4)
    102

one int argument and check default second:

    >>> add_integer(0)
    98

one float:

    >>> add_integer(2.5)
    100

one negative float:

    >>> add_integer(-97.5)
    1

two integers:

    >>> add_integer(10, 5)
    15

integer and float:

    >>> add_integer(123, 5.9)
    128

two floats:

    >>> add_integer(1.5, 1.5)
    2

Add infinity:

    >>> add_integer(float('inf'), float('-inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

first arg invalid:

    >>> add_integer("Hi", 2)
    Traceback (most recent call last):
    TypeError: a must be an integer

second arg invalid:

    >>> add_integer(2, "Hi")
    Traceback (most recent call last):
    TypeError: b must be an integer

both args invalid:

    >>> add_integer(None, None)
    Traceback (most recent call last):
    TypeError: a must be an integer

float overflow:
    >>> add_integer(float('inf'), 0)
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
